<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FilmesApi</name>
    </assembly>
    <members>
        <member name="M:FilmesApi.Controllers.FilmeController.AdicionaFilme(FilmesApi.Data.Dtos.CreateFilmeDto)">
            <sumary>
                Adiciona um filme ao banco de dados
            </sumary>
            <param name="filmeDto"> Objeto com os campos necessários para criação de um filme </param>
            <returns>IActionResult</returns>
            <response code="201"> Caso inserção seja feita com sucesso </response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.RecuperaFilme(System.Int32,System.Int32)">
            <sumary>
                Consulta de todos os filme no banco de dados
            </sumary>
            <response code="201"> Caso a pesquisa seja feita com sucesso </response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.RecuperaFilmeId(System.Int32)">
            <sumary>
                Consulta de um filme específico no banco de dados
            </sumary>
            <param name="id"> Objeto com os campos necessários para consultar um filme </param>
            <returns>IActionResult</returns>
            <response code="201"> Caso a pesquisa seja feita com sucesso </response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.AtualizaFilme(System.Int32,FilmesApi.Data.Dtos.UpdateFilmeDto)">
            <sumary>
                Atualizar filme no banco de dados
            </sumary>
            <param name="filmeDto"> Objeto com os campos necessários para a atualização de um filme </param>
            <returns>IActionResult</returns>
            <response code="201"> Caso a atualização seja feita com sucesso </response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.AtualizaFilmeParcial(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{FilmesApi.Data.Dtos.UpdateFilmeDto})">
            <sumary>
                Atualização do filme sem utilizar todos os campos banco de dados
            </sumary>
            <param name="id"> Objeto com os campos necessários para atualização de um filme </param>
            <returns>IActionResult</returns>
            <response code="201"> Caso a atualização seja feita com sucesso </response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.DeletaFilme(System.Int32)">
            <sumary>
                Deletar filme no banco de dados
            </sumary>
            <param name="id"> Objeto com os campos necessários para deletar um filme </param>
            <returns>IActionResult</returns>
            <response code="201"> Caso o delete seja feito com sucesso </response>
        </member>
        <member name="T:FilmesApi.Migrations.CriandoTabelaFilme">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CriandoTabelaFilme.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CriandoTabelaFilme.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CriandoTabelaFilme.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
